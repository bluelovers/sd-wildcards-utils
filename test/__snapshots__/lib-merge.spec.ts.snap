// Jest Snapshot v1, https://jestjs.io/docs/snapshot-testing

exports[`merge mergeFindSingleRoots 1`] = `
{
  "root": {
    "root2": {
      "sub1": [
        123,
      ],
      "sub1-1": [
        123,
      ],
      "sub2": {
        "sub2-1": [
          456,
        ],
        "sub2-2": [
          789,
        ],
      },
      "sub4": {
        "sub2-1": [
          456,
        ],
        "sub2-2": [
          789,
        ],
      },
    },
  },
}
`;

exports[`merge mergeFindSingleRoots 2`] = `
"# comment source
root:
  # comment source
  # comment root2
  root2:
    sub1:
      # comment source
      #
      # comment root2.sub1
      - 123
    "sub1-1":
      # comment source
      - 123
    sub2:
      # comment source
      "sub2-1":
        - 456
      # comment source
      "sub2-2":
        - 789
    sub4:
      "sub2-1":
        - 456
      # comment source
      "sub2-2":
        - 789
"
`;

exports[`merge mergeFindSingleRoots: Single Seq 1`] = `
{
  "root": {
    "root2": {
      "sub1": [
        123,
      ],
      "sub1-1": [
        123,
      ],
      "sub2": {
        "sub2-1": [
          456,
        ],
        "sub2-2": [
          789,
        ],
      },
    },
  },
}
`;

exports[`merge mergeFindSingleRoots: Single Seq 2`] = `
"# comment source
root:
  # comment source
  root2:
    sub1:
      # comment source
      - 123
    "sub1-1":
      # comment source
      - 123
    sub2:
      # comment source
      "sub2-1":
        - 456
      # comment source
      "sub2-2":
        - 789
"
`;

exports[`merge mergeFindSingleRoots: Single Seq 3`] = `
{
  "root": {
    "root2": {
      "sub1": [
        123,
        123456,
      ],
      "sub1-1": [
        123,
      ],
      "sub2": {
        "sub2-1": [
          456,
        ],
        "sub2-2": [
          789,
        ],
      },
    },
  },
}
`;

exports[`merge mergeFindSingleRoots: Single Seq 4`] = `
"# comment source
root:
  # comment source
  root2:
    sub1:
      # comment source
      - 123
      - 123456
    "sub1-1":
      # comment source
      - 123
    sub2:
      # comment source
      "sub2-1":
        - 456
      # comment source
      "sub2-2":
        - 789
"
`;

exports[`merge mergeFindSingleRoots: deep merge: level 2 1`] = `
{
  "root": {
    "root2": {
      "sub1": [
        123,
        123456,
      ],
      "sub1-1": [
        123,
      ],
      "sub2": {
        "sub2-1": [
          456,
          456789,
        ],
        "sub2-2": [
          789,
        ],
      },
    },
  },
}
`;

exports[`merge mergeFindSingleRoots: deep merge: level 2 2`] = `
"# comment source
root:
  # comment source
  root2:
    sub1:
      # comment source
      - 123
      - 123456
    "sub1-1":
      # comment source
      - 123
    sub2:
      # comment source
      #
      # comment root2.sub2.sub2-1
      "sub2-1":
        - 456
        - 456789
      # comment source
      "sub2-2":
        - 789
"
`;

exports[`merge mergeFindSingleRoots: multi merge 1`] = `
{
  "root": {
    "root2": {
      "sub1": [
        123,
        123456,
      ],
      "sub1-1": [
        123,
        123456,
      ],
      "sub2": {
        "sub2-1": [
          456,
        ],
        "sub2-2": [
          789,
        ],
      },
      "sub4": {
        "sub2-1": [
          456,
        ],
        "sub2-2": [
          789,
        ],
      },
    },
  },
}
`;

exports[`merge mergeFindSingleRoots: multi merge 2`] = `
"# comment source
root:
  # comment source
  root2:
    sub1:
      # comment source
      - 123
      - 123456
    "sub1-1":
      # comment source
      - 123
      - 123456
    sub2:
      # comment source
      "sub2-1":
        - 456
      # comment source
      "sub2-2":
        - 789
    sub4:
      "sub2-1":
        - 456
      "sub2-2":
        - 789
"
`;

exports[`merge mergeFindSingleRoots: throw 1`] = `"Only allow merge same node type at paths: ["root","root2","sub2"], a: yaml.map, b: yaml.seq"`;
